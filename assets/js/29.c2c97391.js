(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{429:function(t,v,_){"use strict";_.r(v);var e=_(34),r=Object(e.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"原子操作"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#原子操作"}},[t._v("#")]),t._v(" 原子操作")]),t._v(" "),_("p",[t._v("相关术语")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("术语")]),t._v(" "),_("th",[t._v("解释")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("缓存行")]),t._v(" "),_("td",[t._v("缓存的最小操作单位")])]),t._v(" "),_("tr",[_("td",[t._v("CAS比较并交换")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("CPU流水线")]),t._v(" "),_("td",[t._v("CPU中由5-6个不同功能的电路单元组成一条指令流水线。将一条X86指令， 拆成5-6步，随后放到这些电路单元中执行， 这样可以在一个CPU时钟周期执行完一个指令")])]),t._v(" "),_("tr",[_("td",[t._v("内存顺序冲突")]),t._v(" "),_("td",[t._v("内存顺序冲突，一般是由假共享引起，假共享是指多个CPU同时更改同一个缓存行的不同位置，而引起的其中一个CPU的操作无效")])])])]),t._v(" "),_("p",[_("strong",[t._v("处理器实现原子操作的方式")])]),t._v(" "),_("p",[t._v("首先明确的是，处理器的读取和写入是原子性的。")]),t._v(" "),_("ol",[_("li",[t._v("使用总线锁保证原子性")]),t._v(" "),_("li",[t._v("使用缓存锁保证原子性")])]),t._v(" "),_("p",[_("strong",[t._v("Java实现原子操作的方式")])]),t._v(" "),_("ol",[_("li",[_("p",[t._v("使用循环CAS实现原子操作")]),t._v(" "),_("p",[t._v("CAS机制的问题：")]),t._v(" "),_("p",[t._v("ABA问题")]),t._v(" "),_("p",[t._v("循环时间长，开销大")]),t._v(" "),_("p",[t._v("只支持单个变量的原子性。AtomicReference类，支持引用对变量")])]),t._v(" "),_("li",[_("p",[t._v("使用锁机制来保证原子操作")])])])])}),[],!1,null,null,null);v.default=r.exports}}]);