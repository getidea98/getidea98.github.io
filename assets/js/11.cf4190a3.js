(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{409:function(_,v,t){"use strict";t.r(v);var e=t(34),a=Object(e.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h1",{attrs:{id:"计算机网络"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#计算机网络"}},[_._v("#")]),_._v(" 计算机网络")]),_._v(" "),t("p",[_._v("tag: 计算机基础")]),_._v(" "),t("h3",{attrs:{id:"tcp-的三次握手与四次挥手"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tcp-的三次握手与四次挥手"}},[_._v("#")]),_._v(" tcp 的三次握手与四次挥手")]),_._v(" "),t("p",[_._v("所谓三次握手(Three-way Handshake)，是指建立一个 TCP 连接时，需要客户端和服务器总共发送3个包。")]),_._v(" "),t("p",[_._v("三次握手的目的是连接服务器指定端口，建立 TCP 连接，并同步连接双方的序列号和确认号，交换 TCP 窗口大小信息。在 socket 编程中，客户端执行 "),t("code",[_._v("connect()")]),_._v(" 时。将触发三次握手。")]),_._v(" "),t("ul",[t("li",[t("p",[_._v("第一次握手(SYN=1, seq=x):")]),_._v(" "),t("p",[_._v("客户端发送一个 TCP 的 SYN 标志位置1的包，指明客户端打算连接的服务器的端口，以及初始序号 X,保存在包头的序列号(Sequence Number)字段里。")]),_._v(" "),t("p",[_._v("发送完毕后，客户端进入 "),t("code",[_._v("SYN_SEND")]),_._v(" 状态。")])]),_._v(" "),t("li",[t("p",[_._v("第二次握手(SYN=1, ACK=1, seq=y, ACKnum=x+1):")]),_._v(" "),t("p",[_._v("服务器发回确认包(ACK)应答。即 SYN 标志位和 ACK 标志位均为1。服务器端选择自己 ISN 序列号，放到 Seq 域里，同时将确认序号(Acknowledgement Number)设置为客户的 ISN 加1，即X+1。 发送完毕后，服务器端进入 "),t("code",[_._v("SYN_RCVD")]),_._v(" 状态。")])]),_._v(" "),t("li",[t("p",[_._v("第三次握手(ACK=1，ACKnum=y+1)")]),_._v(" "),t("p",[_._v("客户端再次发送确认包(ACK)，SYN 标志位为0，ACK 标志位为1，并且把服务器发来 ACK 的序号字段+1，放在确定字段中发送给对方，并且在数据段放写ISN的+1")]),_._v(" "),t("p",[_._v("发送完毕后，客户端进入 "),t("code",[_._v("ESTABLISHED")]),_._v(" 状态，当服务器端接收到这个包时，也进入 "),t("code",[_._v("ESTABLISHED")]),_._v(" 状态，TCP 握手结束。")])])]),_._v(" "),t("p",[t("img",{attrs:{src:"/imgs/computerbase/tcp-connection-made-three-way-handshake.png",alt:"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20b38bf/tcp-connection-made-three-way-handshake.png"}})]),_._v(" "),t("p",[_._v("TCP 的连接的拆除需要发送四个包，因此称为四次挥手(Four-way handshake)，也叫做改进的三次握手。客户端或服务器均可主动发起挥手动作，在 socket 编程中，任何一方执行 "),t("code",[_._v("close()")]),_._v(" 操作即可产生挥手操作。")]),_._v(" "),t("ul",[t("li",[t("p",[_._v("第一次挥手(FIN=1，seq=x)")]),_._v(" "),t("p",[_._v("假设客户端想要关闭连接，客户端发送一个 FIN 标志位置为1的包，表示自己已经没有数据可以发送了，但是仍然可以接受数据。")]),_._v(" "),t("p",[_._v("发送完毕后，客户端进入 "),t("code",[_._v("FIN_WAIT_1")]),_._v(" 状态。")])]),_._v(" "),t("li",[t("p",[_._v("第二次挥手(ACK=1，ACKnum=x+1)")]),_._v(" "),t("p",[_._v("服务器端确认客户端的 FIN 包，发送一个确认包，表明自己接受到了客户端关闭连接的请求，但还没有准备好关闭连接。")]),_._v(" "),t("p",[_._v("发送完毕后，服务器端进入 "),t("code",[_._v("CLOSE_WAIT")]),_._v(" 状态，客户端接收到这个确认包之后，进入 "),t("code",[_._v("FIN_WAIT_2")]),_._v(" 状态，等待服务器端关闭连接。")])]),_._v(" "),t("li",[t("p",[_._v("第三次挥手(FIN=1，seq=y)")]),_._v(" "),t("p",[_._v("服务器端准备好关闭连接时，向客户端发送结束连接请求，FIN 置为1。")]),_._v(" "),t("p",[_._v("发送完毕后，服务器端进入 "),t("code",[_._v("LAST_ACK")]),_._v(" 状态，等待来自客户端的最后一个ACK。")])]),_._v(" "),t("li",[t("p",[_._v("第四次挥手(ACK=1，ACKnum=y+1)")]),_._v(" "),t("p",[_._v("客户端接收到来自服务器端的关闭请求，发送一个确认包，并进入 "),t("code",[_._v("TIME_WAIT")]),_._v("状态，等待可能出现的要求重传的 ACK 包。")]),_._v(" "),t("p",[_._v("服务器端接收到这个确认包之后，关闭连接，进入 "),t("code",[_._v("CLOSED")]),_._v(" 状态。")]),_._v(" "),t("p",[_._v("客户端等待了某个固定时间（两个最大段生命周期，2MSL，2 Maximum Segment Lifetime）之后，没有收到服务器端的 ACK ，认为服务器端已经正常关闭连接，于是自己也关闭连接，进入 "),t("code",[_._v("CLOSED")]),_._v(" 状态。")]),_._v(" "),t("p",[t("img",{attrs:{src:"/imgs/computerbase/tcp-connection-closed-four-way-handshake.png",alt:"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20b38bf/tcp-connection-closed-four-way-handshake.png"}})])])]),_._v(" "),t("h3",{attrs:{id:"http与https的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http与https的区别"}},[_._v("#")]),_._v(" HTTP与HTTPS的区别")]),_._v(" "),t("p",[t("strong",[_._v("HTTP:超文本传输协议，基于TCP/IP协议，无状态的，应用层的协议。")])]),_._v(" "),t("ul",[t("li",[_._v("无状态：协议对客户端没有状态存储，对事物处理没有“记忆”能力")]),_._v(" "),t("li",[_._v("无连接：每次请求需要通过TCP三次握手四次挥手，和服务器重新建立连接。")]),_._v(" "),t("li",[_._v("基于请求和响应：基本的特性，由客户端发起请求，服务端响应")]),_._v(" "),t("li",[_._v("通信使用明文、请求和响应不会对通信方进行确认、无法保护数据的完整性")]),_._v(" "),t("li",[_._v("组成：请求行、请求头、请求体")]),_._v(" "),t("li",[_._v("状态码\n"),t("ol",[t("li",[_._v("1XX- 信息型，服务器收到请求，需要请求者继续操作。")]),_._v(" "),t("li",[_._v("2XX- 成功型，请求成功收到，理解并处理。")]),_._v(" "),t("li",[_._v("3XX - 重定向，需要进一步的操作以完成请求。")]),_._v(" "),t("li",[_._v("4XX - 客户端错误，请求包含语法错误或无法完成请求。")]),_._v(" "),t("li",[_._v("5XX - 服务器错误，服务器在处理请求的过程中发生了错误。")])])]),_._v(" "),t("li",[t("strong",[_._v("常见状态码")]),_._v("：\n"),t("ol",[t("li",[_._v("200 OK - 客户端请求成功")]),_._v(" "),t("li",[_._v("301 - 资源（网页等）被永久转移到其它URL")]),_._v(" "),t("li",[_._v("302 - 临时跳转400 Bad Request - 客户端请求有语法错误，不能被服务器所理解")]),_._v(" "),t("li",[_._v("401 Unauthorized - 请求未经授权，这个状态代码必须和WWW-Authenticate报头域一起使用")]),_._v(" "),t("li",[_._v("404 - 请求资源不存在，可能是输入了错误的URL")]),_._v(" "),t("li",[_._v("500 - 服务器内部发生了不可预期的错误")]),_._v(" "),t("li",[_._v("503 Server Unavailable - 服务器当前不能处理客户端的请求，一段时间后可能恢复正常")])])])]),_._v(" "),t("p",[t("strong",[_._v("HTTPS：基于HTTP协议，通过SSL或TLS提供加密处理数据、验证对方身份以及数据完整性保护")])]),_._v(" "),t("ul",[t("li",[_._v("内容加密")]),_._v(" "),t("li",[_._v("验证身份")]),_._v(" "),t("li",[_._v("保护数据完整性")])]),_._v(" "),t("p",[_._v("HTTPS的缺点")]),_._v(" "),t("ul",[t("li",[_._v("HTTPS每次连接需要经过多次握手。")]),_._v(" "),t("li",[_._v("申请SSL证书需要钱")]),_._v(" "),t("li",[_._v("SSL设计加密解密，增加CPU的运算压力。")])]),_._v(" "),t("p",[_._v("HTTPS 建立连接过程")]),_._v(" "),t("p",[t("img",{attrs:{src:"/imgs/computerbase/bc0xtmpgwq.png",alt:"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20b38bf/bc0xtmpgwq.png"}})]),_._v(" "),t("p",[t("strong",[_._v("HTTP与HTTPS的总结")])]),_._v(" "),t("ul",[t("li",[_._v("HTTPS是HTTP协议的安全版本，HTTP协议的数据传输是明文的，是不安全的，HTTPS使用了SSL/TLS协议进行了加密处理。")]),_._v(" "),t("li",[_._v("http和https使用连接方式不同，默认端口也不一样，http是80，https是443。")])])])}),[],!1,null,null,null);v.default=a.exports}}]);