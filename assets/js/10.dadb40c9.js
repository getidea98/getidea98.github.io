(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{421:function(t,a,v){"use strict";v.r(a);var _=v(34),s=Object(_.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"数据库"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据库"}},[t._v("#")]),t._v(" 数据库")]),t._v(" "),v("p",[t._v("tag: 计算机基础")]),t._v(" "),v("h2",{attrs:{id:"数据库范式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据库范式"}},[t._v("#")]),t._v(" 数据库范式")]),t._v(" "),v("ol",[v("li",[t._v("第一范式：列的原子性。表中所有字段都是不可再分的，则满足第一范式。")]),t._v(" "),v("li",[t._v("第二范式：确保表的所有列都和主键相关。")]),t._v(" "),v("li",[t._v("第三范式；另外非主键列必须直接依赖于主键，不能存在传递依赖")])]),t._v(" "),v("h2",{attrs:{id:"索引"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#索引"}},[t._v("#")]),t._v(" 索引")]),t._v(" "),v("h3",{attrs:{id:"聚簇索引"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#聚簇索引"}},[t._v("#")]),t._v(" 聚簇索引")]),t._v(" "),v("p",[t._v("一种索引，该索引中索引的逻辑顺序与磁盘上的物理存储顺序相同。")]),t._v(" "),v("h3",{attrs:{id:"非聚簇索引"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#非聚簇索引"}},[t._v("#")]),t._v(" 非聚簇索引")]),t._v(" "),v("p",[t._v("一种索引，该索引中索引的逻辑顺序与磁盘上的物理存储顺序不同。")]),t._v(" "),v("h3",{attrs:{id:"联合索引"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#联合索引"}},[t._v("#")]),t._v(" 联合索引")]),t._v(" "),v("p",[t._v("一种索引，多个字段组成的索引。联合索引遵从最左前缀原则。")]),t._v(" "),v("p",[t._v("最左前缀原则：")]),t._v(" "),v("h2",{attrs:{id:"事务"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#事务"}},[t._v("#")]),t._v(" 事务")]),t._v(" "),v("p",[t._v("事务就是逻辑上操作的最小单位。要么都执行，要么都不执行。")]),t._v(" "),v("h3",{attrs:{id:"事务的四大特性acid"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#事务的四大特性acid"}},[t._v("#")]),t._v(" 事务的四大特性ACID")]),t._v(" "),v("ol",[v("li",[t._v("原子性（Atomicity）：事务中的所有操作作为一个整体，要么全部成功,要么全部失败。")]),t._v(" "),v("li",[t._v("一致性（Consistency）：事务的执行结果必须使数据库从一个一致性状态到另一个一致性状态")]),t._v(" "),v("li",[t._v("隔离型（Isolation）：并发执行的事务不会相互影响。")]),t._v(" "),v("li",[t._v("持久性（Durability）：事务一旦提交,其对数据库的更新就是持久的")])]),t._v(" "),v("h3",{attrs:{id:"并发带来的问题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#并发带来的问题"}},[t._v("#")]),t._v(" 并发带来的问题")]),t._v(" "),v("ol",[v("li",[t._v("脏读：一个线程读取到另外一个事务修改但没提交的数据。")]),t._v(" "),v("li",[t._v("不可重复读：在一次事务中，两次读取的数据不一致。因为在两次读取之间，有别的事务对这个数据进行了修改。")]),t._v(" "),v("li",[t._v("幻读：与不可重复读类似；在同一个事务(T1)中两次读取多条数据，在两次读取之间。另外的事务(T2)添加了一些数据。导致在事务(T1)读取第二次的时候突然多了一些数据。就像幻觉一样。")])]),t._v(" "),v("h3",{attrs:{id:"四种隔离级别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#四种隔离级别"}},[t._v("#")]),t._v(" 四种隔离级别")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("READ-UNCOMMITTED(读取未提交)")])]),t._v(" "),v("li",[v("strong",[t._v("READ-COMMITTED(读取已提交）")])]),t._v(" "),v("li",[v("strong",[t._v("REPEATABLE-READ(可重复读)")])]),t._v(" "),v("li",[v("strong",[t._v("SERIALIZABLE(可串行化)")])])]),t._v(" "),v("h2",{attrs:{id:"myisam与innodb的对比"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#myisam与innodb的对比"}},[t._v("#")]),t._v(" MyISAM与InnoDB的对比")]),t._v(" "),v("h3",{attrs:{id:"区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#区别"}},[t._v("#")]),t._v(" 区别：")]),t._v(" "),v("ol",[v("li",[v("p",[t._v("InnoDB支持事务，MyISAM不支持事务")])]),t._v(" "),v("li",[v("p",[t._v("InnoDB支持外键，MyISAM不支持外键")])]),t._v(" "),v("li",[v("p",[t._v("InnoDB的主键是聚簇索引，MyISAM的主键是非聚簇索引。（InnoDB的普通索引是非聚簇索引）")]),t._v(" "),v("p",[t._v("InnoDB通过普通索引查询时，需要查询两次。第一次通过普通索引查找到主键，第二次通过主键与主键索引查询到具体数据。")])]),t._v(" "),v("li",[v("p",[t._v("InnoDB 最小的锁粒度是行锁，MyISAM 最小的锁粒度是表锁。")])])])])}),[],!1,null,null,null);a.default=s.exports}}]);