(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{414:function(a,t,s){"use strict";s.r(t);var n=s(34),p=Object(n.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"hashmap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hashmap"}},[a._v("#")]),a._v(" HashMap")]),a._v(" "),s("p",[a._v("tag: Java基础")]),a._v(" "),s("p",[a._v("特点：")]),a._v(" "),s("ul",[s("li",[a._v("非线程安全")]),a._v(" "),s("li",[a._v("底层是数组➕链表、数组➕红黑树")]),a._v(" "),s("li",[a._v("扩容存在数组扩容、链表树化")])]),a._v(" "),s("ol",[s("li",[s("p",[a._v("构造方法有三个")]),a._v(" "),s("ol",[s("li",[s("p",[a._v("HashMap()：提供默认的扩容因子（0.75)")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("HashMap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("loadFactor "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" DEFAULT_LOAD_FACTOR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// all other fields defaulted")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])])]),a._v(" "),s("li",[s("p",[a._v("HashMap(int initialCapacity): initialCapacity 作为默认的数组大小。详细看构造方法3")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("HashMap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" initialCapacity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("initialCapacity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" DEFAULT_LOAD_FACTOR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])])]),a._v(" "),s("li",[s("p",[a._v("HashMap(int initialCapacity, float loadFactor): 与2相比，提供的更为全面。并且是2的底层。")]),a._v(" "),s("p",[a._v("initialCapacity:")]),a._v(" "),s("p",[a._v("参数范围是 0<initialCapacity≤MAXIMUM_CAPACITY。")]),a._v(" "),s("p",[a._v("方法tableSizeFor，目的是寻找不大于给定参数（initialCapacity）最小的2的幂。")]),a._v(" "),s("p",[a._v("initialCapacity = 15 - threshold = 16")]),a._v(" "),s("p",[a._v("initialCapacity = 32 - threshold = 32")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("HashMap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" initialCapacity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("float")]),a._v(" loadFactor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("initialCapacity "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throw")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("IllegalArgumentException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Illegal initial capacity: "')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v("\n                                               initialCapacity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("initialCapacity "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" MAXIMUM_CAPACITY"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n            initialCapacity "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" MAXIMUM_CAPACITY"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("loadFactor "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("||")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Float")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("isNaN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("loadFactor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throw")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("IllegalArgumentException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Illegal load factor: "')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v("\n                                               loadFactor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("loadFactor "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" loadFactor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("threshold "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("tableSizeFor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("initialCapacity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])])])])]),a._v(" "),s("li",[s("p",[a._v("当链表长度到达8，数组长度到达64时，链表才会转换成红黑树。否则优先扩容。")])]),a._v(" "),s("li",[s("p",[a._v("当链表的长度到6，这个链表由红黑树变成链表。")])]),a._v(" "),s("li",[s("p",[a._v("数组长度是2的幂，为了更高效率的计算下表。")])])]),a._v(" "),s("h2",{attrs:{id:"concurrenthashmap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#concurrenthashmap"}},[a._v("#")]),a._v(" ConcurrentHashMap")]),a._v(" "),s("ol",[s("li",[s("p",[a._v("key和value是不支持null，为什么？")]),a._v(" "),s("p",[a._v("关键点：这是一个支持多线程的Map。")]),a._v(" "),s("p",[a._v("假如支持的话，如果map.get(key)返回一个null。我们没办法判断这个key和 value（null）有没有映射关系。因为，没有映射关系返回null，有映射关系返回了value（null）。")]),a._v(" "),s("p",[a._v("同样的问题在Hashmap中可以通过，map."),s("code",[a._v("containsKey(key)")]),a._v("来进一步判断是否有过这个key的映射。")]),a._v(" "),s("p",[a._v("但是因为这个map是支持多线程的，就导致在map上的验证方法，没办法放在ConcurrentHashMap上面。")])])])])}),[],!1,null,null,null);t.default=p.exports}}]);